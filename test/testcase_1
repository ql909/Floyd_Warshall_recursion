# Import testing package
import unittest
from recursion import floydWarshall, INF

# Unit Tests
class TestFloydWarshallRecursive(unittest.TestCase):
    def test_floyd_warshall_recursive(self):
        graph = [[0, 3, INF, 5],
                 [2, 0, INF, 4],
                 [INF, 1, 0, INF],
                 [INF, INF, 2, 0]]
        expected = [[0, 3, 7, 5],
                   [2, 0, 6, 4],
                   [3, 1, 0, 4],
                   [5, 3, 2, 0]]
        n = len(graph)
        result = floydWarshall(graph)
        for i in range(n):
            for j in range(n):
                if expected[i][j] == INF:
                    self.assertEqual(result[i][j], INF)
                else:
                    self.assertAlmostEqual(result[i][j], expected[i][j], places=5)


if __name__ == '__main__':
    unittest.main()
