# Python3 Program for Floyd Warshall Algorithm
 
# Define infinity 
INF = float("inf")
 
 
def floydWarshall(graph):
    """
    Apply Floyd-Warshall algorithm to find the shortest paths between all pairs of vertices in a graph.

    Parameters:
    graph (list of list of int/float): Adjacency matrix representation of the graph. A value of INF indicates that
        there is no edge between the two vertices.

    Returns:
    list of list of int/float: The shortest distances between all pairs of vertices. A value of INF indicates that
        there is no path between the two vertices.
    """
    dist = graph.copy()

    n = len(dist)

    for k in range(n):
        for i in range(n):
            for j in range(n):
                if dist[i][j] > dist[i][k] + dist[k][j]:
                    dist[i][j] = dist[i][k] + dist[k][j]

    return dist

graph = [[0, 5, INF, 10],
             [INF, 0, 3, INF],
             [INF, INF, 0,   1],
             [INF, INF, INF, 0]
             ]

print(floydWarshall(graph))

