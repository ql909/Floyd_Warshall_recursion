# Floyd Warshall Algorithm using Recursion with Python

def floydWarshall(dist):

    # check the number of vertices of the input graph
    v = len(dist)

    # Define a recursive formula 
    # to find the shortest path between two vertices

    def shortestPath(i, j, k):

        # This is when k == -1, 
        #then there are no intermediate vertices from i to j.
        # We return dist[i][j] directly
        if k == -1:
            return dist[i][j]

        # compare these two, 
        # choose the one that takes the least amount of time
        else:
            return min(shortestPath(i, j, k - 1),
                       shortestPath(i, k, k - 1) + shortestPath(k, j, k - 1))

    # update graph
    for k in range(v):
        for i in range(v):
            for j in range(v):
                dist[i][j] = shortestPath(i, j, k)
    return dist


