# Floyd Warshall Algorithm imprative way with Python

# define the INF
INF = float("inf")

# define the algorithm using for and loops
def floydWarshall_orginal(graph):
    n = len(graph)
    dist = [[INF for _ in range(n)] for _ in range(n)]

    for i in range(n):
        for j in range(n):
            dist[i][j] = graph[i][j]

    for k in range(n):
        for i in range(n):
            for j in range(n):
                if dist[i][j] > dist[i][k] + dist[k][j]:
                    dist[i][j] = dist[i][k] + dist[k][j]

    return dist

graph = [[0, 5, INF, 10],
         [INF, 0, 3, INF],
         [INF, INF, 0, 1],
         [INF, INF, INF, 0]]

print(floydWarshall_orginal(graph))

